$date
	Tue Apr 23 10:08:08 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module csa_test $end
$var wire 1 ! cout $end
$var wire 8 " z [7:0] $end
$var reg 8 # a [7:0] $end
$var reg 8 $ b [7:0] $end
$var reg 8 % c [7:0] $end
$var reg 1 & clk $end
$var reg 1 ' reset $end
$scope module c1 $end
$var wire 8 ( a [7:0] $end
$var wire 8 ) b [7:0] $end
$var wire 8 * c [7:0] $end
$var wire 1 ! cout $end
$var wire 1 + u $end
$var wire 8 , z [7:0] $end
$scope module f1 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / ic $end
$var wire 1 0 oc $end
$var wire 1 1 s $end
$upscope $end
$scope module f2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 4 ic $end
$var wire 1 5 oc $end
$var wire 1 6 s $end
$upscope $end
$scope module f3 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 9 ic $end
$var wire 1 : oc $end
$var wire 1 ; s $end
$upscope $end
$scope module f4 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 > ic $end
$var wire 1 ? oc $end
$var wire 1 @ s $end
$upscope $end
$scope module f5 $end
$var wire 1 A a $end
$var wire 1 B b $end
$var wire 1 C ic $end
$var wire 1 D oc $end
$var wire 1 E s $end
$upscope $end
$scope module f6 $end
$var wire 1 F a $end
$var wire 1 G b $end
$var wire 1 H ic $end
$var wire 1 I oc $end
$var wire 1 J s $end
$upscope $end
$scope module f7 $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M ic $end
$var wire 1 N oc $end
$var wire 1 O s $end
$upscope $end
$scope module f8 $end
$var wire 1 P a $end
$var wire 1 Q b $end
$var wire 1 R ic $end
$var wire 1 S oc $end
$var wire 1 T s $end
$upscope $end
$scope module f9 $end
$var wire 1 6 a $end
$var wire 1 0 b $end
$var wire 1 U ic $end
$var wire 1 V oc $end
$var wire 1 W s $end
$upscope $end
$scope module f10 $end
$var wire 1 ; a $end
$var wire 1 5 b $end
$var wire 1 V ic $end
$var wire 1 X oc $end
$var wire 1 Y s $end
$upscope $end
$scope module f11 $end
$var wire 1 @ a $end
$var wire 1 : b $end
$var wire 1 X ic $end
$var wire 1 Z oc $end
$var wire 1 [ s $end
$upscope $end
$scope module f12 $end
$var wire 1 E a $end
$var wire 1 ? b $end
$var wire 1 Z ic $end
$var wire 1 \ oc $end
$var wire 1 ] s $end
$upscope $end
$scope module f13 $end
$var wire 1 J a $end
$var wire 1 D b $end
$var wire 1 \ ic $end
$var wire 1 ^ oc $end
$var wire 1 _ s $end
$upscope $end
$scope module f14 $end
$var wire 1 O a $end
$var wire 1 I b $end
$var wire 1 ^ ic $end
$var wire 1 ` oc $end
$var wire 1 a s $end
$upscope $end
$scope module f15 $end
$var wire 1 T a $end
$var wire 1 N b $end
$var wire 1 ` ic $end
$var wire 1 b oc $end
$var wire 1 c s $end
$upscope $end
$scope module f16 $end
$var wire 1 d a $end
$var wire 1 S b $end
$var wire 1 b ic $end
$var wire 1 ! oc $end
$var wire 1 + s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0d
1c
0b
0a
1`
1_
0^
0]
1\
1[
0Z
1Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
1O
0N
0M
1L
0K
0J
1I
1H
0G
1F
1E
0D
1C
0B
0A
1@
1?
1>
1=
1<
1;
0:
09
08
17
06
05
04
03
02
11
00
0/
0.
1-
b10101101 ,
0+
b111000 *
b1001000 )
b101101 (
0'
0&
b111000 %
b1001000 $
b101101 #
b10101101 "
0!
$end
#10
1&
#20
1]
0[
1Z
0a
0Y
1X
0\
1_
0^
0?
15
0E
1D
01
b10110000 "
b10110000 ,
0>
13
18
1B
1G
0L
0-
12
07
0<
0F
1K
0&
b110000 %
b110000 *
b111110 $
b111110 )
b1000010 #
b1000010 (
#30
1&
#40
0+
1[
0Z
1_
0^
1a
0`
1c
0b
1W
0X
1]
0\
11
b11111011 "
b11111011 ,
0I
1N
16
05
0;
1:
0@
1?
14
1>
0C
0H
1M
1.
03
0=
0G
1L
02
17
1<
1A
0&
b1001010 %
b1001010 *
b1010101 $
b1010101 )
b1011100 #
b1011100 (
#50
1&
#60
1Y
0[
1Z
1]
1\
1_
0a
01
b10110110 "
b10110110 ,
10
1T
06
15
1@
0N
1E
0D
0O
1/
19
0M
1R
13
08
1=
0L
0A
0K
0&
b10001111 %
b10001111 *
b11011 $
b11011 )
b1100 #
b1100 (
#70
1&
#80
0&
#90
1&
#100
0&
#110
1&
#120
0&
#130
1&
#140
0&
#150
1&
#160
0&
